/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TestToken, TestTokenInterface } from "../TestToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561002f6012600a61014f565b61003b906103e8610165565b3360009081526001602052604090205561017c565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156100a15780850481111561008557610085610050565b600184161561009357908102905b60019390931c92800261006a565b935093915050565b6000826100b857506001610149565b816100c557506000610149565b81600181146100db57600281146100e557610101565b6001915050610149565b60ff8411156100f6576100f6610050565b50506001821b610149565b5060208310610133831016604e8410600b8410161715610124575081810a610149565b6101316000198484610066565b806000190482111561014557610145610050565b0290505b92915050565b600061015e60ff8416836100a9565b9392505050565b808202811582820484141761014957610149610050565b6104628061018b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806342966c681161005b57806342966c68146100ef57806370a08231146101025780638da5cb5b1461013957806395d89b411461016457600080fd5b806306fdde0314610082578063313ce567146100c057806340c10f19146100da575b600080fd5b6100aa604051806040016040528060098152602001682a32b9ba2a37b5b2b760b91b81525081565b6040516100b7919061031b565b60405180910390f35b6100c8601281565b60405160ff90911681526020016100b7565b6100ed6100e8366004610385565b610186565b005b6100ed6100fd3660046103af565b610286565b61012b6101103660046103c8565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100b7565b60005461014c906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b6100aa6040518060400160405280600381526020016214d51560ea1b81525081565b6000546001600160a01b031633146101f05760405162461bcd60e51b815260206004820152602260248201527f54657374546f6b656e3a2063616c6c6572206973206e6f7420746865206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b6001600160a01b0382166102555760405162461bcd60e51b815260206004820152602660248201527f54657374546f6b656e3a2063616e6e6f74206d696e7420746f207a65726f206160448201526564647265737360d01b60648201526084016101e7565b6001600160a01b0382166000908152600160205260408120805483929061027d908490610400565b90915550505050565b336000908152600160205260409020548111156102f45760405162461bcd60e51b815260206004820152602660248201527f54657374546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016101e7565b3360009081526001602052604081208054839290610313908490610419565b909155505050565b602081526000825180602084015260005b81811015610349576020818601810151604086840101520161032c565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461038057600080fd5b919050565b6000806040838503121561039857600080fd5b6103a183610369565b946020939093013593505050565b6000602082840312156103c157600080fd5b5035919050565b6000602082840312156103da57600080fd5b6103e382610369565b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610413576104136103ea565b92915050565b81810381811115610413576104136103ea56fea2646970667358221220ad3217ac97b820f1c3c74d5214100e67f01057328becd0dbdf9f3b1d397ed97464736f6c634300081c0033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestToken__factory {
    return super.connect(runner) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestToken {
    return new Contract(address, _abi, runner) as unknown as TestToken;
  }
}
